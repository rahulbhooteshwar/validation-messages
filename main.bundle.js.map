{"version":3,"sources":["F:/dev/Angular/Angular_2/validation-messages/demo/src async","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.css","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.html","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.ts","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.module.ts","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/directives/validate-equal.directive.ts","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/forms/template-form.component.html","F:/dev/Angular/Angular_2/validation-messages/demo/src/app/forms/template-form.component.ts","F:/dev/Angular/Angular_2/validation-messages/demo/src/environments/environment.ts","F:/dev/Angular/Angular_2/validation-messages/demo/src/main.ts","../../tmp/module/lib.service.ts","../../tmp/module/lib.directive.ts","../../tmp/module/lib.module.ts"],"names":["Observable","Injectable","Http","Directive","ElementRef","Renderer2","NgModel","HostListener","NgModule","CommonModule"],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/dev/Angular/Angular_2/validation-messages/demo/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<h1>Template Driven Form</h1>\\n<app-template-form *ngIf=\\\"startLoading\\\"></app-template-form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {MessageConfigService} from 'validation-messages';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  startLoading = false;\n  constructor(private messageConfigService: MessageConfigService){\n\n  }\n  ngOnInit(){\n    var self = this;\n    this.messageConfigService.fetchValidationMessages('/assets/validation-messages.json').subscribe(\n    data=>{\n      self.messageConfigService.validationMessages = data;\n      self.startLoading = true;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TemplateFormComponent } from './forms/template-form.component';\nimport { ValidationMessagesModule} from 'validation-messages';\nimport { ValidateEqualDirective } from './directives/validate-equal.directive';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TemplateFormComponent,\n    ValidateEqualDirective\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ValidationMessagesModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/app.module.ts","import { Directive, Attribute, forwardRef } from '@angular/core';\nimport { AbstractControl, Validator, ValidatorFn, NG_VALIDATORS } from '@angular/forms';\n\n@Directive({\n  selector: '[validateEqual]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective), multi: true }\n  ]\n})\nexport class ValidateEqualDirective implements Validator {\n\n  constructor( @Attribute('validateEqual') private validateEqual: string, @Attribute('reverse') private reverse: string) { }\n  validate(c: AbstractControl): { [key: string]: any } {\n    var value = c.value;\n    var e = c.root.get(this.validateEqual);\n    if (e && e.value && e.value != value) {\n      return { \"validateEqual\": true }\n    }\n    if (e && e.value && e.value == value) {\n      var relatedControlErrors = e.errors;\n      if(relatedControlErrors) {\n        delete relatedControlErrors['validateEqual'];\n        if (!Object.keys(relatedControlErrors).length) {\n          e.setErrors(null);\n        }\n        e.patchValue(e.value, {emitEvent:true});\n      }\n      return null;\n    }\n    return null;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/directives/validate-equal.directive.ts","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n       <div class=\\\"form-group\\\">\\n          <button (click)=\\\"onPopulate()\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" >Populate</button>\\n        </div>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #f=\\\"ngForm\\\" [ngClass]=\\\"{'submitted': f.submitted}\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Name</label>\\n          <input appValidationMessages required minlength=\\\"3\\\" maxlength=\\\"5\\\" ngModel name=\\\"name\\\" #name=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n          <!--<p class=\\\"text-warning\\\" *ngIf=\\\"!name.valid && (name.touched || f.submitted)\\\">Please Enter a valid name</p>-->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"\\\">Email</label>\\n          <input appValidationMessages required email ngModel name=\\\"email\\\" #email=\\\"ngModel\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\n           <!--<p class=\\\"text-warning\\\" *ngIf=\\\"!email.valid && (email.touched || f.submitted)\\\" >Please Enter a valid email</p>-->\\n        </div>\\n        <div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Password</label>\\n            <input  validateEqual=\\\"confirmPassword\\\"  appValidationMessages required ngModel name=\\\"password\\\" #password=\\\"ngModel\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n            <!--<p *ngIf=\\\"!password.valid && (password.touched || f.submitted)\\\" class=\\\"text-warning\\\">Please enter a valid password</p>-->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"\\\">Confirm Password</label>\\n            <input validateEqual=\\\"password\\\" appValidationMessages required ngModel name=\\\"confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" type=\\\"password\\\" class=\\\"form-control\\\">\\n            <!--<p *ngIf=\\\"!confirmPassword.valid && (confirmPassword.touched || f.submitted)\\\" class=\\\"text-warning\\\">Please confirm password</p>-->\\n          </div>\\n          <!--<p *ngIf=\\\"passwords.value && passwords.value.password != passwords.value.confirmPassword && (password.touched && confirmPassword.touched)\\\" class=\\\"text-warning\\\">Passwords do not match</p>-->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" >Submit</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/forms/template-form.component.html\n// module id = ../../../../../src/app/forms/template-form.component.html\n// module chunks = 1","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-template-form',\n  templateUrl: './template-form.component.html'\n})\nexport class TemplateFormComponent implements OnInit {\n  @ViewChild('f') userForm:HTMLFormElement;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  onSubmit(){\n    console.log( this.userForm);\n  }\n  onPopulate(){\n    this.userForm.form.patchValue({\n      name: \"Rahul Bhooteshwar\",\n      email: \"rahul.bhooteshwar@gmail.com\"\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/app/forms/template-form.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// F:/dev/Angular/Angular_2/validation-messages/demo/src/main.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport {Observable} from 'rxjs/Rx'\n\n\nexport class MessageConfigService {\n  validationMessages:any;\n  constructor(private http:Http) {\n\n  }\n  fetchValidationMessages(resourceUrl: string){\n    return this.http.get(resourceUrl).map((res:Response)=>{\n      return res.json();\n    }).catch((error:any) => Observable.throw(error.json().error || 'Server error'));\n  }\n  getMessageforError(key:string, error: any){\n    var validationMessage = this.validationMessages[key]?this.validationMessages[key]:this.validationMessages['miscellaneous'];\n    if(typeof error != 'object') {\n      return validationMessage;\n    } else {\n      //TODO return modified object with customized message\n      switch (key) {\n        case 'minlength':\n          validationMessage.text = validationMessage.text.replace('$DYNAMIC_VALUE', error.requiredLength);\n          break;\n        case 'maxlength':\n          validationMessage.text = validationMessage.text.replace('$DYNAMIC_VALUE', error.requiredLength);\n          break;\n        case 'pattern':\n          validationMessage.text = validationMessage.text.replace('$DYNAMIC_VALUE', error.requiredPattern);\n          break;\n        default:\n          break;\n      }\n      return validationMessage;\n    }\n  }\n  getAllMessages(){\n    //providing it via  service will avoid creating multiple instances.\n    return this.validationMessages;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../tmp/module/lib.service.ts","import { Directive, ElementRef,  OnInit, Renderer2, HostListener} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport { MessageConfigService } from './lib.service';\n\nexport class ValidationMessagesDirective implements OnInit {\n  validationMessages:any;\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private model:NgModel, public messageConfigService: MessageConfigService) {\n    this.validationMessages = this.messageConfigService.getAllMessages();\n    var self = this;\n    //trigger validation message(s) on form submission\n    this.model.formDirective.ngSubmit.subscribe(function(data:any){\n      self.triggerValidationMessages();\n    });\n    //trigger validation message(s) on value changes\n    this.model.valueChanges!.subscribe(function(){\n      self.triggerValidationMessages();\n    });\n  }\n\n  ngOnInit(){\n    var self = this;\n    setTimeout(function(){\n      if(self.elementRef.nativeElement.hasAttribute('required')) {\n        //Add required asterisk class on label\n        self.renderer.addClass(self.elementRef.nativeElement.previousElementSibling, 'required');\n      }\n    }, 200);\n  }\n   onInput(){\n    //trigger validation message(s) on input\n    this.triggerValidationMessages();\n  }\n\n   onBlur(){\n    //trigger validation message(s) on focus out\n    this.triggerValidationMessages();\n  }\n  triggerValidationMessages(){\n    this.updateErrorMessages();\n    if(this.model.invalid && (this.model.touched || this.model.formDirective.submitted)){\n      for (var key in this.model.errors!) {\n        if(this.model.errors!=null && this.model.errors[key]){\n          var validationMessage = this.messageConfigService.getMessageforError(key, this.model.errors[key]);\n          this.createErrorMessage(key, validationMessage);\n        }\n      }\n    }\n  }\n  createErrorMessage(errorType:any, validationMessage:any){\n      var messageElement = this.elementRef.nativeElement.parentNode.querySelector('.'+validationMessage.selector);\n      var presentErrors = Object.keys(this.model.errors);\n      if(messageElement == null){\n        if(errorType != 'required' && presentErrors.indexOf('required') == -1){\n          var p = document.createElement('p');\n          p.className += \" text-danger validation-message\";\n          p.className += \" \"+validationMessage.selector;\n          p.innerHTML = validationMessage.text;\n          this.renderer.appendChild(this.elementRef.nativeElement.parentNode, p);\n        } else if(errorType == 'required'){\n          //if 'required' error is present remove other ones first\n          var target = this.elementRef.nativeElement.parentNode.querySelector('.validation-message')\n          if(target){\n            target.remove();\n          }\n          var p = document.createElement('p');\n          p.className += \" text-danger validation-message\";\n          p.className += \" \"+validationMessage.selector;\n          p.innerHTML = validationMessage.text;\n          this.renderer.appendChild(this.elementRef.nativeElement.parentNode, p);\n        }\n      }\n  }\n  updateErrorMessages(){\n    //check if we need to remove previously added error messages\n    for(let errorType in this.validationMessages) {\n      if(this.model.errors) {\n        var presentErrors = Object.keys(this.model.errors);\n        if(presentErrors.indexOf(errorType) === -1){\n          var target = this.elementRef.nativeElement.parentNode.querySelector('.'+this.validationMessages[errorType].selector);\n          if(target!=null) {\n            target.remove();\n          }\n        }\n      } else {\n        //remove all errors as input is valid\n        var target = this.elementRef.nativeElement.parentNode.querySelector('.validation-message')\n        if(target){\n          target.remove();\n        }\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[appValidationMessages]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NgModel, },\n{type: MessageConfigService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onInput': [{ type: HostListener, args: ['input', ] },],\n'onBlur': [{ type: HostListener, args: ['blur', ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../tmp/module/lib.directive.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ValidationMessagesDirective} from './lib.directive';\nimport { MessageConfigService } from './lib.service';\n\n// Export module's public API\nexport { ValidationMessagesDirective} from './lib.directive';\nexport { MessageConfigService } from './lib.service';\n\n\nexport class ValidationMessagesModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ValidationMessagesModule,\n      providers: [MessageConfigService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ValidationMessagesDirective\n  ],\n  exports: [\n    ValidationMessagesDirective\n  ],\n  providers: [\n    MessageConfigService\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ../../tmp/module/lib.module.ts"],"sourceRoot":"webpack:///"}